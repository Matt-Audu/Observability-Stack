services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    env_file: ./backend/.env
    depends_on:
      - postgresdb
    networks:
      - app_network
    restart: unless-stopped

  postgresdb:
    image: postgres:15
    container_name: postgresdb
    env_file: ./backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
  
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - app_network

  nginxproxymanager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '8090:81'
    volumes:
      - ./nginx/data:/data
      - ./nginx/letsencrypt:/etc/letsencrypt
    environment:
      - DISABLE_IPV6=true
    networks:
      - app_network

networks:
  app_network:
    external: true
    driver: bridge

volumes:
  pgdata:

