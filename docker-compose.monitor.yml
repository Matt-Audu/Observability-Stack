services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9092:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: $GRAFANA_ADMIN_USER
      GF_SECURITY_ADMIN_PASSWORD: $GRAFANA_ADMIN_PASSWORD
    ports:
      - 3004:3000
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app_network

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - "3084:3100"
    command: -config.file=/etc/loki/loki.yml
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki.yml
      - loki-data:/loki
    networks:
      - app_network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/promtail.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp
    command: -config.file=/etc/promtail/promtail.yml
    depends_on:
      - loki
    networks:
      - app_network


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 8082:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app_network
    command:
      - --housekeeping_interval=10s
      - --docker_only=true
    privileged: true
    devices:
      - /dev/kmsg

  alertmanager-config:
    image: alpine:latest
    container_name: alertmanager-config
    volumes:
      - ./alertmanager/alertmanager.yml.tpl:/tmp/alertmanager.yml.tpl
      - config-volume:/config
    env_file: .env
    command: sh -c "apk add --no-cache gettext && envsubst < /tmp/alertmanager.yml.tpl > /config/alertmanager.yml"
    networks:
      - app_network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    env_file: .env
    volumes:
      - config-volume:/etc/alertmanager
      - alertmanager-data:/alertmanager
    ports:
      - "9099:9093"
    networks:
      - app_network
    depends_on:
      - alertmanager-config


  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    command:
      - "--config.file=/etc/blackbox_exporter/config.yml"
    networks:
      - app_network

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: $DATA_SOURCE
    ports:
      - "9187:9187"
    networks:
      - app_network
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=9187"
    


networks:
  app_network:
    external: true

volumes:
  prometheus-data:
  grafana-storage:
  loki-data:
  alertmanager-data:
  config-volume:
    
    